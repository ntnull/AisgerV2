@using System.Globalization
@using Aisger
@using Aisger.Models
@model Aisger.Models.ESCO_DIC_Product
@{
    ViewBag.Title = ResourceSetting.EscoDicProductKind;
}
@Html.Partial("~/Views/Home/MenuItem.cshtml")
@Html.Partial("~/Views/Home/EditHeaderView.cshtml")
@Html.Partial("~/Views/Home/MessageDialogBox.cshtml")
<link rel="stylesheet" href="@Url.Content("~/Content/custom/colorbox.css")">
<style type="text/css">
        .form-record {
        }

        input[type="file"] {
            display: none;
        }
        /*.custom-file-upload {
        border: 1px solid #ccc;
        display: inline-block;
        padding: 6px 12px;
        cursor: pointer;
    }*/
</style>

<script type="text/javascript">
    function wrapInputFile(fileInputId) {
        $('#' + fileInputId).inputfile({
            uploadText: '<span class="glyphicon glyphicon-upload"></span> Загрузить файл',
            removeText: '<span class="glyphicon glyphicon-trash"></span>',
            restoreText: '<span class="glyphicon glyphicon-remove"></span>',

            uploadButtonClass: 'btn btn-primary',
            removeButtonClass: 'btn btn-default'
        });
    }
</script>
<div id="B">
    @Html.Partial("~/Views/Home/TitleItem.cshtml", ResourceSetting.EscoPage + "," + ResourceSetting.EscoSearch)


    <div id="wrapper_grid" style="margin-left: 50px;box-sizing:border-box">
        <div class="bs-callout bs-callout-warning" id="callout-navs-anchor-disabled">
            <h4>@ResourceSetting.NameGroup: "@Model.ESCO_DIC_ProductKind.NameGroup"</h4>
        </div>

            <div class="clearfixmandatory">
                @Html.Label(ResourceSetting.NameProduct)
                <div class="input">
                    @Html.TextBoxFor(model => model.NameProduct, new { @class = "form-control form-record", @style = "width: 80%", @readonly = "readonly" })
                </div>
            </div>
            <div class="input" style="margin-left: 0;">
                @Html.TextAreaFor(model => model.Note, new { @class = "form-control form-edit", @placeholder = ResourceSetting.Description, @style = "height: 100px;width: 90%", @readonly = "readonly" })
            </div>

            <div class="media">
                <div class="media-left">
                   
                    <div>
                        <a class="group1" href="@Model.CurrentUrlImage">
                            <img id="imgPreview" height="200" width="200" src="@Model.CurrentUrlImage" />
                        </a>
                    </div>
                </div>
                <div class="media-body">
                    <div class="panelcontent">
                        @if (Model.AttachFiles.Count > 1)
                        {
                            for (int j = 0; j < Model.AttachFiles.Count - 1; j++)
                            {
                                <a class="group1" href="@Model.AttachFiles[j]"><img src="@Model.AttachFiles[j]" width="40" height="40" /></a>
                            }
                        }

                    </div>

                </div>
            </div>

            @* <label for="file-upload" class="custom-file-upload  label-primary">
                    <i class="fa fa-cloud-upload"></i> Загрузить изображение
                </label>*@

            <div class="panel">
                <div style='display: none'>
                    <div id='inline_content' style='padding: 10px; background: #fff;'>
                        <p><strong>This content comes from a hidden element on this page.</strong></p>
                        <p>The inline option preserves bound JavaScript events and changes, and it puts the content back where it came from when it is closed.</p>
                        <p><a id="click" href="#" style='padding: 5px; background: #ccc;'>Click me, it will be preserved!</a></p>

                        <p><strong>If you try to open a new Colorbox while it is already open, it will update itself with the new content.</strong></p>
                        <p>

                            Updating Content Example:<br />
                            <a class="ajax" href="../../content/custom/ajax.html">Click here to load new content</a>
                        </p>
                    </div>
                </div>

            </div>
      
    </div>
</div>
<script src="@Url.Content("~/Scripts/custom/jquery.colorbox.js")" type="text/javascript"> </script>
<script type="text/javascript">
    function onSelect(e) {
        if (e.files[0].size > 256000) {
            alert('The file size is too large for upload');
            e.preventDefault();
            return false;
        }
        // Array with information about the uploaded files
        var files = e.files;
        var ext = $('#logo').val().split('.').pop().toLowerCase();
        if ($.inArray(ext, ['gif', 'jpeg', 'jpg', 'png', 'tif', 'pdf']) == -1) {
            alert('This type of file is restricted from being uploaded due to security reasons');
            e.preventDefault();
            return false;
        }
        return true;
    }
</script>

<script>
    $(document).ready(function () {
        var nameProduct = $("#NameProduct").val();
        if (nameProduct != null && nameProduct.length > 0) {
            $("#loadbtn").show();
        }
        $("#file-upload").change(function() {
            $("#demoForm").submit();
        });
        $("#NameProduct").change(function () {
            if ($(this).val() != null && $(this).val().length > 0) {
                $("#loadbtn").show();
                return;
            }
            $("#loadbtn").hide();
        });
        //Examples of how to assign the Colorbox event to elements
        $(".group1").colorbox({ rel: 'group1' });
        $(".ajax").colorbox();
        $(".youtube").colorbox({ iframe: true, innerWidth: 640, innerHeight: 390 });
        $(".vimeo").colorbox({ iframe: true, innerWidth: 500, innerHeight: 409 });
        $(".iframe").colorbox({ iframe: true, width: "80%", height: "80%" });
        $(".inline").colorbox({ inline: true, width: "50%" });
        $(".callbacks").colorbox({
            onOpen: function () { alert('onOpen: colorbox is about to open'); },
            onLoad: function () { alert('onLoad: colorbox has started to load the targeted content'); },
            onComplete: function () { alert('onComplete: colorbox has displayed the loaded content'); },
            onCleanup: function () { alert('onCleanup: colorbox has begun the close process'); },
            onClosed: function () { alert('onClosed: colorbox has completely closed'); }
        });

        $('.non-retina').colorbox({ rel: 'group5', transition: 'none' })
        $('.retina').colorbox({ rel: 'group5', transition: 'none', retinaImage: true, retinaUrl: true });

        //Example of preserving a JavaScript event for inline calls.
        $("#click").click(function () {
            $('#click').css({ "background-color": "#f00", "color": "#fff", "cursor": "inherit" }).text("Open this window again and this message will still be here.");
            return false;
        });
    });
</script>

