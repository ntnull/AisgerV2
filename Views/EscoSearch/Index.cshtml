@using Aisger
@using Aisger.Models
@using Aisger.Utils
@using GridMvc.Html
@model Aisger.Models.Entity.Esco.EscoEntityDocument
@Html.Partial("~/Views/Home/MenuItem.cshtml")
@Html.Partial("~/Views/Home/GridContent.cshtml")
@Html.Partial("~/Views/Home/EditHeaderView.cshtml")
@Html.Partial("~/Views/Home/MessageDialogBox.cshtml")
<link href="@Url.Content("~/Content/search/style.css")" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="@Url.Content("~/Content/custom/colorbox.css")">
<script src="@Url.Content("~/Scripts/search/script.js")" type="text/javascript"> </script>
<script src="@Url.Content("~/Scripts/search/jquery.color.js")" type="text/javascript"> </script>
<style type="text/css">
    b {
        color: black;
        font-weight: bold;
    }

    #mymap {
        width: 100%;
        height: 600px;
    }
</style>

<div id="B">
    <ul class="titlegroup" style="margin-top: 8px;">
        <li style="font-size: 18px; color: #2679b5;" id="parentLabel"> @ResourceSetting.EscoPage  <span></span></li>
        <li id="selectLabel"> <span class="glyphicon glyphicon-arrow-right"></span>  @ResourceSetting.EscoSearch (<span >@Model.AllCount</span>)</li>
       <li>@using (Html.BeginForm("Index", "EscoSearch", FormMethod.Post, new { id = "demoForm", name = "demoForm" }))
       {
           var sTerm = "";
           if (string.IsNullOrEmpty(Model.Biniin))
           {
               sTerm = ResourceSetting.sFind + "...";
           }
           else
           {
               sTerm = Model.Biniin;
           }

        @Html.ValidationSummary(true)
        <div id="main" style="margin-bottom: 20px">
            <form id="searchForm">
                <fieldset>
                    <div class="input" id="divSearch">
                        <input type="text" name="Biniin" id="Biniin" value="@sTerm" />
                    </div>
                    <input type="submit" id="searchSubmit" value="" />
                </fieldset>
            </form>
          
        </div>
       }</li>
         <li style="float: right">
         
           @* <button type="button" class="btn btn-info btn-sm" id="refreshBtn">
                <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> Обновить
            </button>*@
          
        </li>
    </ul>
    <div id="wrapper_grid">
        <div class="panel">
            <div style='display: none'>
                <div id='inline_content' style='padding: 10px; background: #fff;'>
                    <p><strong>This content comes from a hidden element on this page.</strong></p>
                    <p>The inline option preserves bound JavaScript events and changes, and it puts the content back where it came from when it is closed.</p>
                    <p><a id="click" href="#" style='padding: 5px; background: #ccc;'>Click me, it will be preserved!</a></p>

                    <p><strong>If you try to open a new Colorbox while it is already open, it will update itself with the new content.</strong></p>
                    <p>

                        Updating Content Example:<br />
                        <a class="ajax" href="../../content/custom/ajax.html">Click here to load new content</a>
                    </p>
                </div>
            </div>

        </div>
  




        <div id="bookListDiv" style="margin-top: 60px">
            @Html.Partial("~/Views/EscoSearch/ResultListView.cshtml", @Model)
        </div>
        <div id="loadingDiv" style="text-align: center; display: none; margin-bottom: 20px;">
            <img alt="Loading" src="@Url.Content("~/Content/Images/ajax-loader.gif")" />
        </div>

    </div>
</div>

<script src="@Url.Content("~/Scripts/custom/jquery.colorbox.js")" type="text/javascript"> </script>
<script type="text/javascript">
    function onSelect(e) {
        if (e.files[0].size > 256000) {
            alert('The file size is too large for upload');
            e.preventDefault();
            return false;
        }
        // Array with information about the uploaded files
        var files = e.files;
        var ext = $('#logo').val().split('.').pop().toLowerCase();
        if ($.inArray(ext, ['gif', 'jpeg', 'jpg', 'png', 'tif', 'pdf']) == -1) {
            alert('This type of file is restricted from being uploaded due to security reasons');
            e.preventDefault();
            return false;
        }
        return true;
    }
</script>

<script>
    $(document).ready(function () {
        //Examples of how to assign the Colorbox event to elements
       
        //        $(".group0").colorbox({ rel: 'group0' });
        //        $(".group1").colorbox({ rel: 'group1' });
        $(".ajax").colorbox();
        $(".youtube").colorbox({ iframe: true, innerWidth: 640, innerHeight: 390 });
        $(".vimeo").colorbox({ iframe: true, innerWidth: 500, innerHeight: 409 });
        $(".iframe").colorbox({ iframe: true, width: "80%", height: "80%" });
        $(".inline").colorbox({ inline: true, width: "50%" });
        $(".callbacks").colorbox({
            onOpen: function () { alert('onOpen: colorbox is about to open'); },
            onLoad: function () { alert('onLoad: colorbox has started to load the targeted content'); },
            onComplete: function () { alert('onComplete: colorbox has displayed the loaded content'); },
            onCleanup: function () { alert('onCleanup: colorbox has begun the close process'); },
            onClosed: function () { alert('onClosed: colorbox has completely closed'); }
        });

        $('.non-retina').colorbox({ rel: 'group5', transition: 'none' })
        $('.retina').colorbox({ rel: 'group5', transition: 'none', retinaImage: true, retinaUrl: true });

        //Example of preserving a JavaScript event for inline calls.
        $("#click").click(function () {
            $('#click').css({ "background-color": "#f00", "color": "#fff", "cursor": "inherit" }).text("Open this window again and this message will still be here.");
            return false;
        });
    });
</script>
<script type="text/javascript">

    function highlight(s, search) {
        return s.replace(new RegExp(
            search.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&'), 'gi'
        ), '<b style="color:red">$&</b>');
    }
    $(document).ready(function () {
        var counterBuff = 0;
        $("#refreshBtn").click(function () {
            $("#demoForm").submit();
        });

       
            $('.list-group').html(
                highlight($('.list-group').html(), $('#Biniin').val())
            );

      
    });
</script>
<script type="text/javascript">
    var BlockNumber = 1; //Infinate Scroll starts from second block
    var NoMoreData = false;
    var inProgress = false;

    $.ajaxSetup({
        dataType: 'json',
        contentType: 'application/json, charset=utf-8'
    });

    $('#B').scroll(function () {
        if ($(this).scrollTop() + $(this).innerHeight() + 3 >= $(this)[0].scrollHeight && !NoMoreData && !inProgress) {

            var filterModel = {
                TotalPage: 1,
                CurrentPage: BlockNumber,
                PageSize: $("#PageSize").val(),
                Biniin: $('#Biniin').val(),

            };
            inProgress = true;
            $("#CurrentPage").val(BlockNumber);
            $("#loadingDiv").show();
            $.post("@Url.Action("InfinateScroll", "EscoSearch")", JSON.stringify({
                model: filterModel
            }),
                function (data) {

                    BlockNumber = BlockNumber + 1;
                    NoMoreData = data.NoMoreData;
                    $("#bookListDiv").append(data.HTMLString);
                    $("#loadingDiv").hide();
                    if ($(".search")[0]) {
                        highlight($('.search').html(), $('#Biniin').val());
                    }

                    inProgress = false;
                });
            ///
        }
    });
</script>