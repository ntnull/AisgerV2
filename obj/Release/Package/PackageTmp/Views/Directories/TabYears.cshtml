@using System.Collections
@using System.Threading
@using Aisger
@using Aisger.Models
@using Aisger.Models.Entity.Map
@using Aisger.Utils
@using FlowDoc.Models
@using GridMvc.Html
@model IEnumerable<RST_Report>
	@Html.Partial("~/Views/Home/GridContent.cshtml")
    <script src="@Url.Content("~/Scripts/custom/gridmvc.reestr.status.js")" type="text/javascript"> </script>
    <script src="@Url.Content("~/Scripts/custom/gridmvc.reestr.reason.js")" type="text/javascript"> </script>
    <script src="@Url.Content("~/Scripts/custom/gridmvc.oblast.js")" type="text/javascript"> </script>
  
    @helper UserRecordView(RST_Report o)
{
		var isactive = o.isactive;
		var id = o.Id;
		if (isactive == true)
		{
			 <input type="checkbox" checked class="isactive-class" isactive="@id" disabled />
		}
		else
		{
			 <input type="checkbox" class="isactive-class" isactive="@id" disabled/>
		}
		
	}

<div style="padding:10px;">
	<button type="button" class="btn btn-info btn-sm btn-edit" >
		<span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>@ResourceSetting.Edit
	</button>
	<button type="button" class="btn btn-info btn-sm btn-save" disabled>
		<span class="glyphicon glyphicon-save" aria-hidden="true"></span>@ResourceSetting.Save
	</button>		
</div>

<div style="padding:5px;">
    <div id="CSSTableGenerator">
        @Html.Grid(Model).Named("ordersGrid").SetLanguage(Thread.CurrentThread.CurrentCulture.TwoLetterISOLanguageName).Columns(columns =>
		{
			columns.Add(o => o.ReportYear).Titled(ResourceSetting.Name).SetWidth(40);
			columns.Add().Encoded(false).Sanitized(false).Titled(ResourceSetting.RstDicStatus).SetWidth(40).RenderValueAs(o => UserRecordView(o).ToHtmlString()).Filterable(true);
		}).WithPaging(50).Sortable()
    </div>
</div>

<script>

	$(function () {

		$('#CSSTableGenerator').on('click', 'td input.isactive-class', function () {

			if (!this.checked) {
				return;
			}

			var checkboxs = $('.isactive-class');
			console.log(checkboxs);
			$.map(checkboxs, function (item) {
				$(item).attr('checked', false);
			});

			$(this).attr('checked', true);

		});

		//---- edit
		$('.btn-edit').click(function (item) {

			var checkboxs = $('.isactive-class');
			$.map(checkboxs, function (item) {
				$(item).attr('disabled', false);
			});

			$('.btn-save').attr('disabled', false);
		});

		//---- save
		$('.btn-save').click(function () {

			var checkboxs = $('.isactive-class');
			var isactive_id = 0;
			$.map(checkboxs, function (item) {
				if ($(item).is(':checked'))
					isactive_id = $(item).attr('isactive');
			});

			//----
			$.post(rootUrl + 'Directories/SaveIsActive', {
				id: isactive_id
			}, function (data) {

				if (data.ErrorMessage) {
					showWarning(data.ErrorMessage);
					return;
				}

				$('.btn-save').attr('disabled', true);
				var checkboxs = $('.isactive-class');
				$.map(checkboxs, function (item) {
					$(item).attr('disabled', true);
				});

			});
		});


	});

</script>
