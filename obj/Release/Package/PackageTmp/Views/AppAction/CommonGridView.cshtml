@using System.Collections
@using System.Threading
@using Aisger
@using Aisger.Models
@using FlowDoc.Models
@using GridMvc.Html
@model IEnumerable<SUB_ActionPlanFilter>
@Html.Partial("~/Views/Home/GridContent.cshtml")
<script src="@Url.Content("~/Scripts/custom/gridmvc.reestr.status.js")" type="text/javascript"> </script>
<script src="@Url.Content("~/Scripts/custom/gridmvc.reestr.reason.js")" type="text/javascript"> </script>
<script src="@Url.Content("~/Scripts/custom/gridmvc.oblast.js")" type="text/javascript"> </script>
<style type="text/css">
    .btnmenu > li > a:hover {
        background-color: transparent;
    }
</style>
@helper GridManageItemColumn(SUB_ActionPlanFilter form)
{
    
    var btnsend = "btnsend_" + form.Id;
    var iconsend = "iconsend_" + form.Id;
    <div class="btn-group">
        <button type="button" class="btn btn-success dropdown-toggle" accesscode="AppAction-operation" disabled data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" title="Операции">
            @ResourceSetting.Operation <span class=" caret"></span>
        </button>
        <ul class="dropdown-menu btnmenu">
            <li class="btn-primary" title="@ResourceSetting.ShowDetails"><a href="@Url.Action("ShowDetails", "SubActionPlan", new { id = form.Id })" class="link-object"><span class="glyphicon glyphicon-search" aria-hidden="true"></span>@ResourceSetting.ShowDetails</a></li>
            @if (!form.IsBack)
            {
                <li class="btn-warning" title="@ResourceSetting.Check"><a href="@Url.Action("Design", "AppAction", new { id = form.Id })" class="link-object"><span class="glyphicon glyphicon-certificate" aria-hidden="true"></span>@ResourceSetting.Check</a></li>
                <li id="@btnsend" class="btn-success" title="@ResourceSetting.Send"><a href="#" onclick="backApp(@form.Id)"><span class="glyphicon glyphicon-send" aria-hidden="true"></span>@ResourceSetting.Send</a></li>
            }
        </ul>

    </div>
    if (form.IsBack)
    {
    <span class="glyphicon glyphicon-ok fa-2x text-success" title="@ResourceSetting.sended"></span>
    }
    else
    {
    <span id="@iconsend" class="fa-2x text-success" title="@ResourceSetting.sended"></span>
    }
}
@helper SubjectView(SUB_ActionPlanFilter o)
{
    var customer = o.OwnerName + '/' + o.Address;
    <a href="@Url.Action("Index", "SubjectInfo", new { id = o.UserId })" class="link-object">
        @customer

    </a>
}


@helper HistoryView(SUB_ActionPlanFilter o)
{
    <a class="openDialog" data-dialog-id="emailDialog" data-dialog-title="@ResourceSetting.History" href="@Url.Action("ShowHistory", "AppAction", new { actionId = @o.Id })" tit title="@ResourceSetting.History">
        @o.StatusName
    </a>

}


<style type="text/css">
    td {
        border-left: 1px solid #dddddd;
    }
</style>
<div id="CSSTableGenerator">
    @Html.Grid(Model).Named("ordersGrid").SetLanguage(Thread.CurrentThread.CurrentCulture.TwoLetterISOLanguageName).Columns(columns =>
            {
                columns.Add(o => o.Id, true)
                    .Titled("Id").SetWidth(0);
                columns.Add(o => o.BINIIN).Titled(ResourceSetting.biniinSubject)
                   .SetWidth(40);
                columns.Add(o => o.IDK).Titled(ResourceSetting.IDK)
                       .SetWidth(40);
                columns.Add()
                    .Encoded(false)
                    .Sanitized(false).Titled(ResourceSetting.SubPerson)
                    .SetWidth(80)
                    .RenderValueAs(o => SubjectView(o).ToHtmlString());
                columns.Add(o => o.OwnerName, true).Titled(ResourceSetting.SubPerson)
                 .SetWidth(40);
                columns.Add(o => o.Address, true).Titled(ResourceSetting.Address)
                .SetWidth(40);

                columns.Add(o => o.SendDate).Titled(ResourceSetting.SendDate)
 .Format("{0:dd/MM/yyyy}")
 .SetWidth(40);

                columns.Add(o => o.OblastName).Titled(ResourceSetting.Oblast)
           .SetWidth(40).SetFilterWidgetType("OblastNameFilterWidget");
                columns.Add()
                .Encoded(false)
                .Sanitized(false).Titled(ResourceSetting.RstDicStatus)
                .SetWidth(40)
                .RenderValueAs(o => HistoryView(o).ToHtmlString());

                columns.Add(o => o.StatusName, true).Titled(ResourceSetting.RstDicStatus)
     .SetWidth(40);


                columns.Add()
                                       .Encoded(false)
                                       .Sanitized(false).SetWidth(20)
                                       .RenderValueAs(o => GridManageItemColumn(o).ToHtmlString());
                /*    columns.Add()
                           .Encoded(false)
                           .Sanitized(false).SetWidth(20)
                           .RenderValueAs(o => GridManageItemColumn(o.Id).ToHtmlString());*/

            }).SetRowCssClasses(c => c.StatusIndex == 1 ? "success" : c.StatusIndex > 2 ? "danger" : string.Empty).WithPaging(50).Sortable().Filterable().WithMultipleFilters()
</div>


<script>
    $(function () {
        pageGrids.ordersGrid.addFilterWidget(new StatusReestrFilterWidget());
        //        pageGrids.ordersGrid.addFilterWidget(new ReasonReestrFilterWidget());
        pageGrids.ordersGrid.addFilterWidget(new OblastFilterWidget());
    });
</script>


<script type="text/javascript">
    $(document).ready(function () {
        $('.openDialog').live("click", function (e) {
            e.preventDefault();
            $("<div style=" + '"' + "text-align: center;" + '"' + "><img src=" + '"' + "../content/images/spinner.gif" + '"' + " style=" + '"' + "display: block; margin: 0 auto;" + '"' + " /></br>" + "....</div>")
                .addClass("dialog")
                .attr("id", $(this)
                    .attr("data-dialog-id"))
                .appendTo("body")
                .dialog({
                    title: $(this).attr("data-dialog-title"),
                    close: function () { $(this).remove(); },
                    width: 800,
                    modal: true
                })
                .load(this.href);
        });
        $(".close").live("click", function (e) {
            e.preventDefault();
            $(this).closest(".dialog").dialog("close");
        });
        $('#accordion').on('hidden.bs.collapse', function () {
            //do something...
        });

        $('#accordion .accordion-toggle').click(function (e) {
            var chevState = $(e.target).siblings("i.indicator").toggleClass('glyphicon-chevron-down glyphicon-chevron-up');
            $("i.indicator").not(chevState).removeClass("glyphicon-chevron-down").addClass("glyphicon-chevron-up");
        });

    });
</script>

<script>
    function backApp(id) {
        var success = function () {
            var params = JSON.stringify({ 'id': id });
            $.ajax({
                type: "POST",
                url: '@Url.Action("SendApplication", "AppAction")',
                data: params,
                dataType: 'json',
                cache: false,
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    if (data.Success) {
                        $('#btnsend_' + id).remove();
                        $('#iconsend_' + id).addClass("glyphicon glyphicon-ok");
                    }
                },
                error: function () {
                    alert("Connection Failed. Please Try Again");
                }
            });

        }
        var cancel = function () {
        };
        showConfirmation("@ResourceSetting.Save", "@ResourceSetting.sAreYouSureYouWantToSend?", success, cancel);
    }
</script>
