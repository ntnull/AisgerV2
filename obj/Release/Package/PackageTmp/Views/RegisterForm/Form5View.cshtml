@using System.Globalization
@using Aisger
@using Aisger.Helpers
@model Aisger.Models.SUB_Form
<style type="text/css">
    .form5Field {
        width: 100%;
    }
</style>
<link href="@Url.Content("~/Content/select2/select2.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/custom/typeahead.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/custom/typeahead.js-bootstrap.css")" rel="stylesheet" type="text/css" />
@if (CultureHelper.GetCurrentCulture() == "kz")
{   
    <div>
        <h5 style="font-weight: bold; text-align: center"> Күнтізбелік @Model.ReportYear жыл ішінде өнім бірлігіне шаққанда нақты
энергия тұтыну және (немесе) үйлер, құрылыстар, ғимараттар
ауданының бірлігіне шаққанда жылытуға кеткен энергетикалық
ресурстардың шығыны туралы ақпарат</h5>

    </div>
}
else
{ 
<div>
    <h5 style="font-weight: bold; text-align: center"> Фактические энергопотребление на единицу продукции и (или) расход энергетических ресурсов на отопление на единицу площади зданий, строений, сооружений на @Model.ReportYear календарный год</h5>
</div>
}
<div style="display: none" id="normDivContent">
    <select id="norm" style="width: 100%; max-width: 510px;" class="populate select2-offscreen form-edit">
        <option value="0"></option>
        @foreach (var nrom in Model.SubDicEnergyindicatorList)
        {
            @Html.Partial("~/Views/RegisterForm/ChildrensGu.cshtml", nrom)
        }
    </select>
</div>
<div id="CSSTableGenerator">
    <table id="table5" class="wast-list" style="width: 100%; text-align: center">
        <thead>
            <tr style="font-weight: bold">
                <td>№ </td>
                <td>@ResourceSetting.form51</td>
                <td class="column-hide">@ResourceSetting.form52</td>
                <td>@ResourceSetting.form53</td>
                <td>@ResourceSetting.form54</td>
                <td>@ResourceSetting.form55</td>
                <td>@ResourceSetting.form56</td>
                <td rowspan="2"></td>
            </tr>
            <tr style="font-style: italic;font-weight: bold">
            @{
				int count = 7;
				var url=HttpContext.Current.Request.Url.LocalPath;
				if (url.IndexOf("AppForm")!=-1){
					count=count+1;
				}
				
                for (int i = 1; i < count; i++)
                {
                    <td>@i</td>
                }
			}
            </tr>

        </thead>
        <tbody id="form5">
            @{
                Aisger.Models.SUB_Form5Record signedObj = null;
            }
            @for (var i = 0; i < Model.SubForm5Records.Count; i++)
            {
                if (Model.SignedSubForm != null)
                { 
                    var id = Model.SubForm5Records[i].Id;
                    signedObj = Model.SignedSubForm.SUB_Form5Record.FirstOrDefault(f => f.Id == id);
                }
                var index = i + 1;
                var normId = "SubForm5Records_" + i + "__energyindicator_id";
                <tr rowid="@Model.SubForm5Records[i].Id" rowindex="@index" rowkind="1">
                    <td class="disabletd">@index</td>
                    <td>
                        <div class="input-group">
                            <div class="norm-select" selectid="@Model.SubForm5Records[i].energyindicator_id" controlid="@normId"></div>
                            @*                            @Html.TextBoxFor(model => model.SubForm5Records[i].IndicatorName, new { @class = "form5Field   form-edit" })*@
                            <span class="input-group-addon">
                                <a class="commentDialog" href="#">
                                    <i class="glyphicon glyphicon-info-sign"></i>
                                </a>
                            </span>
                        </div>
                        @if (signedObj != null)
                        {
                            <div class="signed signed-color">
                                @signedObj.energyindicator_id
                            </div>
                        }
                    </td>
                    @if (@Model.SubForm5Records[i].SUB_DIC_NormEnergy != null)
                    {
                        <td class="disabletd column-hide">
                            @Model.SubForm5Records[i].SUB_DIC_NormEnergy.Rate
                        </td>
                    }
                    else
                    {
                        <td class="disabletd column-hide"></td>
                    }
                    <td>
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.SubForm5Records[i].RegularStandart, new { @class = "form5Field  form-edit" })
                            <span class="input-group-addon">
                                <a class="commentDialog" href="#">
                                    <i class="glyphicon glyphicon-info-sign"></i>
                                </a>
                            </span>
                        </div>
                        @if (signedObj != null)
                        {
                            <div class="signed signed-color">
                                @signedObj.RegularStandart
                            </div>
                        }
                    </td>
                    <td>
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.SubForm5Records[i].UnitMeasure, new { @class = "form5Field  form-edit" })
                            <span class="input-group-addon">
                                <a class="commentDialog" href="#">
                                    <i class="glyphicon glyphicon-info-sign"></i>
                                </a>
                            </span>
                        </div>
                        @if (signedObj != null)
                        {
                            <div class="signed signed-color">
                                @signedObj.UnitMeasure
                            </div>
                        }
                    </td>
                    <td>
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.SubForm5Records[i].CalcFormula, new { @class = "form5Field  form-edit" })
                            <span class="input-group-addon">
                                <a class="commentDialog" href="#">
                                    <i class="glyphicon glyphicon-info-sign"></i>
                                </a>
                            </span>
                        </div>
                        @if (signedObj != null)
                        {
                            <div class="signed signed-color">
                                @signedObj.CalcFormula
                            </div>
                        }
                    </td>
                    <td>
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.SubForm5Records[i].EnergyValue, new { @class = "form5Field  form-edit from-float" })
                            <span class="input-group-addon">
                                <a class="commentDialog" href="#">
                                    <i class="glyphicon glyphicon-info-sign"></i>
                                </a>
                            </span>
                        </div>
                        @if (signedObj != null)
                        {
                            <div class="signed signed-color">
                                @signedObj.EnergyValue
                            </div>
                        }
                    </td>
                    @if (i == 0)
                    {
                        <td><a class="deleteRow"></a></td>
                    }
                    else
                    {
                        <td>
                            <i class="glyphicon glyphicon-remove deleteRow" title="@ResourceSetting.Delete"></i>
                        </td>
                    }
                </tr>

            }
			
            <tr>
                <td colspan="5" style="text-align: left;">

                    <button type="button" class="btn btn-success btn-sm add-btn-from5" id="addTable5">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>@ResourceSetting.addNew
                    </button>

                </td>
            </tr>

            <tr>
                <td colspan="9" style="text-align: left;" class="disabletd">
                    <h5 style="font-weight: bold; padding-left: 20px">@ResourceSetting.Other</h5>
                </td>
            </tr>
            @for (var i = 0; i < Model.SubForm5RecordsOther.Count; i++)
            {
                if (Model.SignedSubForm != null)
                {
                    var id = Model.SubForm5RecordsOther[i].Id;
                    signedObj = Model.SignedSubForm.SUB_Form5Record.FirstOrDefault(f => f.Id == id);
                }
                var index = i + 1;
                var normId = "SubForm5RecordsOther_" + i + "__NormEnergyId";
                <tr rowid="@Model.SubForm5RecordsOther[i].Id" rowindex="@index" rowkind="2">
                    <td class="disabletd">@index</td>
                    <td>
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.SubForm5RecordsOther[i].IndicatorName, new { @class = "form5Field   form-edit" })
                            <span class="input-group-addon">
                                <a class="commentDialog" href="#">
                                    <i class="glyphicon glyphicon-info-sign"></i>
                                </a>
                            </span>
                        </div>
                        @if (signedObj != null)
                        {
                            <div class="signed signed-color">
                                @signedObj.IndicatorName
                            </div>
                        }
                    </td>
                    @if (@Model.SubForm5RecordsOther[i].SUB_DIC_NormEnergy != null)
                    {
                        <td class="disabletd column-hide">@Model.SubForm5RecordsOther[i].SUB_DIC_NormEnergy.Rate</td>
                    }
                    else
                    {
                        <td class="disabletd column-hide"></td>
                    }
                    <td>
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.SubForm5RecordsOther[i].RegularStandart, new { @class = "form5Field  form-edit" })
                            <span class="input-group-addon">
                                <a class="commentDialog" href="#">
                                    <i class="glyphicon glyphicon-info-sign"></i>
                                </a>
                            </span>
                        </div>
                        @if (signedObj != null)
                        {
                            <div class="signed signed-color">
                                @signedObj.RegularStandart
                            </div>
                        }
                    </td>
                    <td>
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.SubForm5RecordsOther[i].UnitMeasure, new { @class = "form5Field  form-edit" })
                            <span class="input-group-addon">
                                <a class="commentDialog" href="#">
                                    <i class="glyphicon glyphicon-info-sign"></i>
                                </a>
                            </span>
                        </div>
                        @if (signedObj != null)
                        {
                            <div class="signed signed-color">
                                @signedObj.UnitMeasure
                            </div>
                        }
                    </td>
                    <td>
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.SubForm5RecordsOther[i].CalcFormula, new { @class = "form5Field  form-edit" })
                            <span class="input-group-addon">
                                <a class="commentDialog" href="#">
                                    <i class="glyphicon glyphicon-info-sign"></i>
                                </a>
                            </span>
                        </div>
                        @if (signedObj != null)
                        {
                            <div class="signed signed-color">
                                @signedObj.CalcFormula
                            </div>
                        }
                    </td>
                    <td>
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.SubForm5RecordsOther[i].EnergyValue, new { @class = "form5Field  form-edit from-float" })
                            <span class="input-group-addon">
                                <a class="commentDialog" href="#">
                                    <i class="glyphicon glyphicon-info-sign"></i>
                                </a>
                            </span>
                        </div>
                        @if (signedObj != null)
                        {
                            <div class="signed signed-color">
                                @signedObj.EnergyValue
                            </div>
                        }
                    </td>
                    @if (i == 0)
                    {
                        <td><a class="deleteRow"></a></td>
                    }
                    else
                    {
                        <td>
                            <i class="glyphicon glyphicon-remove deleteRow" title="@ResourceSetting.Delete"></i>
                        </td>
                    }
                </tr>

            }
            <tr>
                <td colspan="5" style="text-align: left;">

                    <button type="button" class="btn btn-success btn-sm add-btn-from5" id="addTable51">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>@ResourceSetting.addNew
                    </button>

                </td>
            </tr>
        </tbody>
        <tfoot id="foodForm5">

        </tfoot>
    </table>
</div>
<div style="font-size: 11px; font-style: italic; margin-top: 20px; margin-bottom: 30px">
 @if (CultureHelper.GetCurrentCulture() == "kz")
 {
    <div>
        *әр сала немесе кәсіпорынның ерекшелігі ескеріліп толтырылады.
    </div>
 }
 else
 {
       <div>
        * заполняется с учетом специфики каждого предприятия и отрасли<br>
    </div>
}
</div>
<script src="@Url.Content("~/Scripts/select2.js")" type="text/javascript"></script>
@if (CultureHelper.GetCurrentCulture() == "ru")
{
    <script src="@Url.Content("~/Scripts/localization/select2_locale_ru.js")" type="text/javascript"></script>
}
else
{
    <script src="@Url.Content("~/Scripts/localization/select2_locale_kk.js")" type="text/javascript"></script>

}
<script src="@Url.Content("~/Scripts/typeahead.min.js")" type="text/javascript"></script>
<script type="text/javascript">

    function SetEventForm5(idcontrol) {
    	$(idcontrol).change(function () {

    		console.log("form5=", $(this).attr('id'));

            var idAttr = $(this).attr('name');
            var fieldName = idAttr.split('.')[1];
            if (fieldName == "RegularStandart") {
                var vall = $(this).val();
                if (vall != null && vall.length > 0) {
                    if (vall.indexOf(',') > 0) {
                        vall = vall.replace(',', '.');
                    }
                    if (vall != '' && !$.isNumeric(vall)) {
                        showWarning('@ResourceSetting.enterNumber');
                        $(this).val("");
                        return;
                    }
                    if (vall.indexOf('-') > -1) {
                        showWarning('@ResourceSetting.enterNumberNotMinus');
                        $(this).val("");
                        return;
                    }  
                }  
            }
            var type = "string";
            if (fieldName == "EnergyValue") {
                type = "float";
            }
            var row = $(this).closest('tr');
            var entityId = row.attr('rowid');
            UpdateModel("form5", entityId, $(this).attr('id'), idAttr.replace('.','_'), $(this).val(), type, 0);
        });
    }
    //bird
	$(document).ready(function () {
	
		if (window.location.href.indexOf('AppForm') < 0) {
			$('.column-hide').hide();
		} else {

			if (window.location.href.indexOf('ShowDetails') < 0)
				$('.column-hide').hide();
		}

        $('.norm-select').each(function () {
            var idcontrol = $(this).attr('controlid');
            var selectid = $(this).attr('selectid');
            var normDiv = $("#norm").clone();
            normDiv.attr('id', idcontrol);
            $(this).append(normDiv);
             $("#" + idcontrol).select2().select2("val", selectid).on("change", function (e) {
                var val = e.val;
                var row = $(this).closest('tr');
                var entityId = row.attr('rowid');
                var unitId = idcontrol.replace("energyindicator_id", "UnitMeasure");
                $("#" + unitId).val($("#" + idcontrol).find(":selected").attr('unit'));
                var columnhide = row.find('.column-hide');
                columnhide.text($("#" + idcontrol).find(":selected").attr('rate'));
                UpdateModel("form5", entityId, $(this).attr('id'), "energyindicator_id", val, "long", 0);

            });
        });

        SetEventForm5(".form5Field");
        var counterTable5 = 0;
        $(".add-btn-from5").on("click", function () {
            var row = $(this).closest("tr").prev();
            var rowindex = parseInt(row.attr('rowindex'), 10) || 0;
            var nextIndex = rowindex + 1;
            var kindObject = "";
            if ($(this).attr('id') == "addTable5") {
                kindObject = "SubForm5Records";
            } else {
                kindObject = "SubForm5RecordsOther";
            }

            var cols = '<tr rowid="0" rowindex="' + nextIndex + '">';
            var idIndicatorName = "IndicatorName_" + nextIndex;
            var idNormEnergy = "energyindicator_id_" + nextIndex;
            var divNormEnergy = "NormEnergyDiv_" + nextIndex;
            var idRegularStandart = "RegularStandart_" + nextIndex;
            var idUnitMeasure = "UnitMeasure_" + nextIndex;
            var idCalcFormula = "CalcFormula_" + nextIndex;
            var idEnergyValue = "EnergyValue_" + nextIndex;
            cols += '<td class="disabletd">' + nextIndex + '</td>';
            var normDiv = document.getElementById("normDivContent");
            var envetStr = '<div class="norm-select" selectid="0" id="' + divNormEnergy + '">' + normDiv.innerHTML+ '</div>';

            if ($(this).attr('id') == "addTable5") {
                cols += '<td><div class="input-group">' + envetStr + '<span class="input-group-addon"><a class="commentDialog" href="#"><i class="glyphicon glyphicon-info-sign"></i></a></span></div></td>';

            } else {
                cols += '<td><div class="input-group"><input type="text" name="SubForm5RecordsOther[' + nextIndex + '].IndicatorName" id="' + idIndicatorName + '" class="form5Field  form-edit"/><span class="input-group-addon"><a class="commentDialog" href="#"><i class="glyphicon glyphicon-info-sign"></i></a></span></div></td>';
            }

            cols += '<td class="disabletd column-hide"></td>';
            cols += '<td><div class="input-group"><input type="text" name="' + kindObject + '[' + nextIndex + '].RegularStandart" id="' + idRegularStandart + '" class="form5Field  form-edit" /><span class="input-group-addon"><a class="commentDialog" href="#"><i class="glyphicon glyphicon-info-sign"></i></a></span></div></td>';
            cols += '<td><div class="input-group"><input type="text" name="' + kindObject + '[' + nextIndex + '].UnitMeasure" id="' + idUnitMeasure + '" class="form5Field  form-edit" /><span class="input-group-addon"><a class="commentDialog" href="#"><i class="glyphicon glyphicon-info-sign"></i></a></span></div></td>';
            cols += '<td><div class="input-group"><input type="text" name="' + kindObject + '[' + nextIndex + '].CalcFormula" id="' + idCalcFormula + '" class="form5Field  form-edit" /><span class="input-group-addon"><a class="commentDialog" href="#"><i class="glyphicon glyphicon-info-sign"></i></a></span></div></td>';
            cols += '<td><div class="input-group"><input type="text" name="' + kindObject + '[' + nextIndex + '].EnergyValue" id="' + idEnergyValue + '" class="form5Field  form-edit from-float" /><span class="input-group-addon"><a class="commentDialog" href="#"><i class="glyphicon glyphicon-info-sign"></i></a></span></div></td>';

            cols += '<td><i class="glyphicon glyphicon-remove deleteRow"  title="@ResourceSetting.Delete"></td>';
            cols += '</tr>';
            //            console.log(cols);
            row.after(cols);

            var normDiv1 = $("#norm").clone();
            normDiv1.attr('id', idNormEnergy);
            $('#' + divNormEnergy).append(normDiv1);
            $("#" + idNormEnergy).select2().on("change", function (e) {
                var val = e.val;
                var row = $(this).closest('tr');
                var entityId = row.attr('rowid');
                var unitId = idNormEnergy.replace("energyindicator_id", "UnitMeasure");
                $("#" + unitId).val($("#" + idNormEnergy).find(":selected").attr('unit'));
                var columnhide = row.find('.column-hide');
                columnhide.text($("#" + idNormEnergy).find(":selected").attr('rate'));
                UpdateModel("form5", entityId, $(this).attr('id'), "energyindicator_id", val, "long", 0);

            });

            SetEventForm5("#" + idIndicatorName);
            SetEventForm5("#" + idRegularStandart);
            SetEventForm5("#" + idUnitMeasure);
            SetEventForm5("#" + idCalcFormula);
            SetEventForm5("#" + idEnergyValue);
            if (window.location.href.indexOf('AppForm') < 0) {
                $('.column-hide').hide();

            }
            counterTable5++;
        });

        $("#table5").on("click", ".deleteRow", function () {

            var row = $(this).closest('tr');
            var success = function () {

                var entityId = row.attr('rowid');
                DeleteRecord("form5", entityId);
                row.remove();
                counterTable5 -= 1;
                $('#addTable5').attr('disabled', false).prop('value', "Добавить");
            }
            var cancel = function () {
            };
            showConfirmation('@ResourceSetting.Delete', '@ResourceSetting.deleteconfirm', success, cancel);
        });
        
	    //----color
	    $('.rating').each(function () {

	        var tableName = $(this).attr('tablename');
	        if (tableName == 'form5') {

	            if (document.getElementById(tableName) == null) {
	                return;
	            }
	            var columnindex = parseInt($(this).attr('columnindex'));
	            var rowindex = parseInt($(this).attr('rowindex'));
	            var iserror = $(this).attr('iserror');
	            //        console.log(tableName + '; col:' + columnindex + "; row:" + rowindex);
	            if (document.getElementById(tableName) == null || document.getElementById(tableName).rows == null || document.getElementById(tableName).rows.length < rowindex + 1) {
	                return;
	            }
	            var cell = document.getElementById(tableName).rows[rowindex].cells[columnindex];

	            if (cell != null && cell.children[0] != null && cell.children[0].children[0] != null) {

	                if (cell.children[0].children[1].name == "SEC_User1.IsCvazy") {

	                    if (iserror) {
	                        cell.children[0].className += " control-error";
	                    } else {
	                        cell.children[0].className += " control-good";
	                    }
	                } else {


	                    cell.children[0].children[1].children[0].children[0].className = "glyphicon glyphicon-info-sign mark-icon";
	                    if (iserror) {
	                        cell.children[0].children[0].className += " control-error";
	                    } else {
	                        cell.children[0].children[0].className += " control-good";
	                    }
	                }
	            }
	        }
	    });
    });
</script>